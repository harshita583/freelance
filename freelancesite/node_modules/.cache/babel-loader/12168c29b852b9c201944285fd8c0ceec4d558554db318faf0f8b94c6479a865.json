{"ast":null,"code":"var _jsxFileName = \"/Users/harshitabhatt/Desktop/FreelanceSite/freelancesite/src/Price.js\",\n  _s = $RefreshSig$();\nimport { Grid, Box, useMediaQuery } from '@mui/material';\nimport payment from '../src/payment.svg';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Price() {\n  _s();\n  const isSmallScreen = useMediaQuery('(max-width:600px)'); // Define your breakpoint for small screens\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      background: '#F2E7D6',\n      display: 'flex',\n      justifyContent: 'center',\n      alignItems: 'center',\n      position: 'relative',\n      width: '100%' // Make the component full-width\n    },\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: isSmallScreen ? 2 : 10,\n      alignContent: \"flex-start\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"my-svg\",\n          src: payment,\n          height: \"auto\",\n          width: \"100%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        style: {\n          paddingRight: \"5%\"\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          p: 0,\n          alignItems: isSmallScreen ? 'center' : 'left' // Center alignment for small screens\n          ,\n          style: {\n            background: '#CCA06F',\n            padding: isSmallScreen ? '4%' : '4%',\n            // Adjust padding for smaller screens\n            borderRadius: '20px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            style: {\n              fontFamily: 'yeseva one',\n              fontSize: isSmallScreen ? '1.125rem' : '1.5rem',\n              // Responsive font size\n              color: 'white'\n            },\n            children: \"$45/hr\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontFamily: 'josefin sans',\n              fontSize: isSmallScreen ? '1.125rem' : '1.5625rem',\n              // Responsive font size\n              color: 'white'\n            },\n            children: \"*Starting rate. Rate is dependent on project, timeline, and requirements.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n_s(Price, \"or2+SI6pFXPk9CnqGxU34nhSqoo=\", false, function () {\n  return [useMediaQuery];\n});\n_c = Price;\nexport default Price;\nvar _c;\n$RefreshReg$(_c, \"Price\");","map":{"version":3,"names":["Grid","Box","useMediaQuery","payment","jsxDEV","_jsxDEV","Price","_s","isSmallScreen","style","background","display","justifyContent","alignItems","position","width","children","container","spacing","alignContent","item","xs","sm","className","src","height","fileName","_jsxFileName","lineNumber","columnNumber","paddingRight","p","padding","borderRadius","fontFamily","fontSize","color","_c","$RefreshReg$"],"sources":["/Users/harshitabhatt/Desktop/FreelanceSite/freelancesite/src/Price.js"],"sourcesContent":["import { Grid, Box, useMediaQuery } from '@mui/material';\nimport payment from '../src/payment.svg';\n\nfunction Price() {\n  const isSmallScreen = useMediaQuery('(max-width:600px)'); // Define your breakpoint for small screens\n\n  return (\n    <Box\n      style={{\n        background: '#F2E7D6',\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        position: 'relative',\n        width: '100%', // Make the component full-width\n      }}\n    >\n      <Grid\n        container\n        spacing={isSmallScreen ? 2 : 10}\n        alignContent=\"flex-start\"\n        alignItems=\"center\"\n        justifyContent=\"center\"\n      >\n        <Grid item xs={12} sm={6}>\n          <img\n            className=\"my-svg\"\n            src={payment}\n            height=\"auto\"\n            width=\"100%\"\n          />\n        </Grid>\n        <Grid item xs={12} sm={6} style={{ paddingRight: \"5%\" }}>\n          <Box\n            p={0}\n            alignItems={isSmallScreen ? 'center' : 'left'} // Center alignment for small screens\n            style={{\n              background: '#CCA06F',\n              padding: isSmallScreen ? '4%' : '4%', // Adjust padding for smaller screens\n              borderRadius: '20px',\n            }}\n          >\n            <h1\n              style={{\n                fontFamily: 'yeseva one',\n                fontSize: isSmallScreen ? '1.125rem' : '1.5rem', // Responsive font size\n                color: 'white',\n              }}\n            >\n              $45/hr\n            </h1>\n            <p\n              style={{\n                fontFamily: 'josefin sans',\n                fontSize: isSmallScreen ? '1.125rem' : '1.5625rem', // Responsive font size\n                color: 'white',\n              }}\n            >\n              *Starting rate. Rate is dependent on project, timeline, and\n              requirements.\n            </p>\n          </Box>\n        </Grid>\n      </Grid>\n    </Box>\n  );\n}\n\nexport default Price;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}